$operatorColor: #e67e22;
$numColor: #e1eef6;
$activeNumColor: #7f9eb2;
$activeOperatorColor: #f39c12;

@mixin blackBorder {
  border: 2.5px solid #000;
}

*::before,
*::after,
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 62.5%;
}

body {
  background-color: #eee;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
}

.title {
  margin-top: 2rem;
  font-size: 2.5rem;
  text-align: center;
}

.calulator {
  @include blackBorder;
  height: 50rem;
  width: 50rem;
  margin: 2rem auto;
  padding: 2.5rem;
  border-radius: 2.5rem;
  background-color: #2c3e50;
  display: grid;
  grid-gap: 0.5rem;
  grid-template-rows: repeat(5, 1fr);
  grid-template-columns: repeat(4, 1fr);
  grid-template-areas:
    "screen screen screen add"
    "seven eight nine multiply"
    "four five six divide"
    "one two three subtract"
    "zero dot clear answer";

  @media only screen and (max-width: 40em) {
    height: 45rem;
    width: 40rem;
    padding: 2rem;
    grid-gap: 0.4rem 0.4rem;
  }

  @media only screen and (max-width: 30em) {
    height: 40rem;
    width: 32rem;
    padding: 1.8rem;
    grid-gap: 0.3rem 0.3rem;
  }
}

.btn {
  color: #000;
  border-radius: 2.5rem;
  cursor: pointer;
  font-size: 2rem;
  /* NEEDED IN ORDER TO PREVENT BUTTONS FROM EXPANDING IF NUMBER IS TOO LARGE */
  min-width: 10.75rem;
  outline: none;

  &:active {
    transform: translateY(0.2rem);
    box-shadow: 0 0.2rem 0.2rem #333;
  }

  @media only screen and (max-width: 40em) {
    font-size: 1.8rem;
    min-width: 8.5rem;
  }

  @media only screen and (max-width: 30em) {
    font-size: 1.6rem;
    min-width: 6.5rem;
  }
}

#screen {
  max-width: 33rem;
  overflow: hidden;
  background-color: gray;
  grid-area: screen;
  border-radius: 1rem;
  @include blackBorder;
  font-size: 3rem;
  padding-top: 2.5rem;
  padding-right: 2rem;
  text-align: right;

  @media only screen and (max-width: 40em) {
    padding-top: 2rem;
  }
  @media only screen and (max-width: 30em) {
    padding-top: 1.5rem;
  }
}

.operator {
  background-color: $operatorColor;
  @include blackBorder;

  &:hover,
  &:active {
    color: #333;
    background: $activeOperatorColor;
  }
}

.num {
  @include blackBorder;
  background-color: $numColor;

  &:hover,
  &:active {
    color: black;
    background-color: $activeNumColor;
  }
}

// Grid position for buttons

#clear {
  @include blackBorder;
  background-color: $numColor;
  grid-area: clear;

  &:hover,
  &:active {
    color: #000;
    background-color: $activeNumColor;
  }
}

#add {
  grid-area: add;
}

#subtract {
  grid-area: subtract;
}

#divide {
  grid-area: divide;
}

#multiply {
  grid-area: multiply;
}

#answer {
  grid-area: answer;
}

.zero {
  grid-area: zero;
}

.one {
  grid-area: one;
}

.two {
  grid-area: two;
}

.three {
  grid-area: three;
}

.four {
  grid-area: four;
}

.five {
  grid-area: five;
}

.six {
  grid-area: six;
}

.seven {
  grid-area: seven;
}

.eight {
  grid-area: eight;
}

.nine {
  grid-area: nine;
}

.dot {
  grid-area: dot;
}

// JS Classes

.toggleNumber-js {
  transform: translateY(0.2rem);
  box-shadow: 0 0.2rem 0.2rem #333;
  background-color: #7f9eb2;
}

.toggleOperator-js {
  transform: translateY(0.2rem);
  box-shadow: 0 0.2rem 0.2rem #333;
  color: #333;
  background-color: #f39c12;
}
